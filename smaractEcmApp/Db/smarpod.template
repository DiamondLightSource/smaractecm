# This template provides support for the settings on smarpod that apply to
# the whole smarpod rather than one of its axes
# Parameters:
#%  macro, P, The base name (eg B21I-MO-POD-01)
#%  macro, TIMEOUT, timeout for port comms
#%  macro, XNAME, user name for the X Axis
#%  macro, YNAME, user name for the Y Axis
#%  macro, ZNAME, user name for the Z Axis
#%  macro, DESC, description of the smarpod
#%  macro, name, object and gui association name (also used as asyn port name)
# % gui, $(name),  edmembed, smarpod_embed.edl, P=$(P), XNAME=$(XNAME=X), YNAME=$(YNAME=Y), ZNAME=$(ZNAME=Z)

# % gui, $(name), boyembed, smaractEcmApp_opi/smarpod_embed_box.opi, P=$(P), XNAME=$(XNAME=X), YNAME=$(YNAME=Y), ZNAME=$(ZNAME=Z), name=$(name), DESC=$(DESC)
# % gui, $(name), boyembed, smaractEcmApp_opi/smarpod_embed.opi, P=$(P), XNAME=$(XNAME=X), YNAME=$(YNAME=Y), ZNAME=$(ZNAME=Z), name=$(name), DESC=$(DESC)
# % gui, $(name), boydetail, smaractEcmApp_opi/smarpod_detail.opi, P=$(P), XNAME=$(XNAME=X), YNAME=$(YNAME=Y), ZNAME=$(ZNAME=Z), name=$(name), DESC=$(DESC)


# % gui, $(name=), readback, Velocity,  $(P):VELOCITY_RBV
# % gui, $(name=), demand, Velocity,  $(P):VELOCITY

# % gui, $(name=), readback, Pivot Mode, $(P):PIVOTMODE_RBV
# % gui, $(name=), enum, Pivot Mode, $(P):PIVOTMODE

# % gui, $(name=), readback, Pivot $(XNAME=X),  $(P):PIVOT:$(XNAME=X)_RBV
# % gui, $(name=), demand, Pivot $(XNAME=X),  $(P):PIVOT:$(XNAME=X)
# % gui, $(name=), readback, Pivot $(YNAME=Y),  $(P):PIVOT:$(YNAME=Y)_RBV
# % gui, $(name=), demand, Pivot $(YNAME=Y),  $(P):PIVOT:$(YNAME=Y)
# % gui, $(name=), readback, Pivot $(ZNAME=Z),  $(P):PIVOT:$(ZNAME=Z)_RBV
# % gui, $(name=), demand, Pivot $(ZNAME=Z),  $(P):PIVOT:$(ZNAME=Z)

# % gui, $(name=), readback, Encoder Mode, $(P):ENCODERMODE_RBV
# % gui, $(name=), enum, Encoder Mode, $(P):ENCODERMODE

# % gui, $(name), boyembed, smaractEcmApp_opi/smarpod_embed_box.opi, P=$(P), XNAME=$(XNAME=X), YNAME=$(YNAME=Y), ZNAME=$(ZNAME=Z), name=$(name), DESC=$(DESC)

record(ai, "$(P):PIVOT:$(XNAME=X)_RBV")
{
  field(DESC, "Pivot $(XNAME=X)")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(name),0,$(TIMEOUT=1))PIVOT_POS_X")
  field(PREC, "2")
  field(EGU, "mm")
}

#% archiver 10 Monitor
#% autosave 2 VAL
record(ao, "$(P):PIVOT:$(XNAME=X)")
{
  field(DESC, "Pivot $(XNAME=X)")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(name),0,$(TIMEOUT=1))PIVOT_POS_X")
  field(PREC, "2")
}# % gui, $(name), boyembed, smaractEcmApp_opi/smarpod_embed_box.opi, P=$(P), XNAME=$(XNAME=X), YNAME=$(YNAME=Y), ZNAME=$(ZNAME=Z), name=$(name), DESC=$(DESC)


record(ai, "$(P):PIVOT:$(YNAME=Y)_RBV")
{
  field(DESC, "Pivot $(YNAME=Y)")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(name),0,$(TIMEOUT=1))PIVOT_POS_Y")
  field(PREC, "2")
  field(EGU, "mm")
}

#% archiver 10 Monitor
#% autosave 2 VAL
record(ao, "$(P):PIVOT:$(YNAME=Y)")name),0,$(TIMEOUT=1))VELOCITY")
  field(EGU, "mm/s")
{
  field(DESC, "Pivot $(YNAME=Y)")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(name),0,$(TIMEOUT=1))PIVOT_POS_Y")
  field(PREC, "2")
}

record(ai, "$(P):PIVOT:$(ZNAME=Z)_RBV")
{
  field(DESC, "Pivot $(ZNAME=Z)")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(name),0,$(TIMEOUT=1))PIVOT_POS_Z")
  field(PREC, "2")
  field(EGU, "mm")
}

#% archiver 10 Monitor
#% autosave 2 VAL
record(ao, "$(P):PIVOT:$(ZNAME=Z)")
{
  field(DESC, "Pivot $(ZNAME=Z)")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(name),0,$(TIMEOUT=1))PIVOT_POS_Z")
  field(PREC, "2")
}

record(ai, "$(P):VELOCITY_RBV")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(name),0,$(TIMEOUT=1))VELOCITY")
  field(EGU, "mm/s")
  field(PREC, "3")  
}

#% archiver 10 Monitor
#% autosave 2 VAL
record(ao, "$(P):VELOCITY")
{
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(name),0,$(TIMEOUT=1))VELOCITY")
  field(PREC, "3")
}

#% archiver 10 Monitor
#% autosave 1 VAL
record(bo, "$(P):PIVOTMODE")
{
    field(DTYP, "asynInt32")
    field(VAL,  "0")
    field(OUT,  "@asyn($(name),0,$(TIMEOUT=1))PIVOT_MODE")
    field(ZNAM, "Stage Relative")
    field(ONAM, "Fixed")
}

record(bi, "$(P):PIVOTMODE_RBV")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(name),0,$(TIMEOUT=1))PIVOT_MODE")
    field(ZNAM, "Stage Relative")
    field(ONAM, "Fixed")
}

#% archiver 10 Monitor
#% autosave 1 VAL
record(mbbo, "$(P):ENCODERMODE")
{
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(name),0,$(TIMEOUT=1))ENCODER_MODE")
    field(ZRST, "Disabled")
    field(ONST, "Enabled")
    field(TWST, "Power Save")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(VAL,2)
}

record(mbbi, "$(P):ENCODERMODE_RBV")
{
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(name),0,$(TIMEOUT=1))ENCODER_MODE")
    field(ZRST, "Disabled")
    field(ONST, "Enabled")
    field(TWST, "Power Save")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
}
